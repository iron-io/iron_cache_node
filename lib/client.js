// Generated by CoffeeScript 1.12.7
(function() {
  var Client, _, apiClient;

  _ = require('underscore');

  apiClient = require('./api_client');

  Client = (function() {
    function Client(options) {
      this.api = new apiClient.APIClient(options);
    }

    Client.prototype.cachesList = function(options, cb) {
      return this.api.cachesList(options, function(error, body) {
        if (error == null) {
          return cb(error, body);
        } else {
          return cb(error, body);
        }
      });
    };

    Client.prototype.getCache = function(cache_name, options, cb) {
      return this.api.getCache(cache_name, options, function(error, body) {
        if (error == null) {
          return cb(error, body);
        } else {
          return cb(error, body);
        }
      });
    };
   
    Client.prototype.deleteCache = function(cache_name, options, cb) {
      return this.api.deleteCache(cache_name, options, function(error, body) {
        if (error == null) {
          return cb(error, body);
        } else {
          return cb(error, body);
        }
      });
    };

    Client.prototype.clearCache = function(cache_name, options, cb) {
      return this.api.clearCache(cache_name, options, function(error, body) {
        if (error == null) {
          return cb(error, body);
        } else {
          return cb(error, body);
        }
      });
    };
    
    Client.prototype.putItem = function(key, cache_name, options, cb) {
      return this.api.putItem(key, cache_name, options, function(error, body) {
        if (error == null) {
          return cb(error, body);
        } else {
          return cb(error, body);
        }
      });
    };

    

    return Client;

  })();

  module.exports.Client = Client;

}).call(this);
